/*
 * The symbol versioning ensures that a new application requiring symbol foo,
 * can't run with old library.so not providing foo.
 *
 * Version info can't enforce this since we never change the SONAME.
 *
 * Copyright (C) 2011-2014 Karel Zak <kzak@redhat.com> 
 */
MOUNT_2.19 {
global:
	mnt_cache_device_has_tag;
	mnt_cache_find_tag_value;
	mnt_cache_read_tags;
	mnt_context_append_options;
	mnt_context_apply_fstab;
	mnt_context_disable_canonicalize;
	mnt_context_disable_helpers;
	mnt_context_disable_mtab;
	mnt_context_do_mount;
	mnt_context_do_umount;
	mnt_context_enable_fake;
	mnt_context_enable_force;
	mnt_context_enable_lazy;
	mnt_context_enable_loopdel;
	mnt_context_enable_rdonly_umount;
	mnt_context_enable_sloppy;
	mnt_context_enable_verbose;
	mnt_context_finalize_mount;
	mnt_context_finalize_umount;
	mnt_context_get_cache;
	mnt_context_get_fs;
	mnt_context_get_fstab;
	mnt_context_get_fstype;
	mnt_context_get_lock;
	mnt_context_get_mflags;
	mnt_context_get_mtab;
	mnt_context_get_optsmode;
	mnt_context_get_source;
	mnt_context_get_status;
	mnt_context_get_target;
	mnt_context_get_user_mflags;
	mnt_context_helper_setopt;
	mnt_context_init_helper;
	mnt_context_is_fake;
	mnt_context_is_force;
	mnt_context_is_lazy;
	mnt_context_is_nomtab;
	mnt_context_is_rdonly_umount;
	mnt_context_is_restricted;
	mnt_context_is_sloppy;
	mnt_context_is_verbose;
	mnt_context_mount;
	mnt_context_prepare_mount;
	mnt_context_prepare_umount;
	mnt_context_set_cache;
	mnt_context_set_fs;
	mnt_context_set_fstab;
	mnt_context_set_fstype;
	mnt_context_set_fstype_pattern;
	mnt_context_set_mflags;
	mnt_context_set_mountdata;
	mnt_context_set_options;
	mnt_context_set_options_pattern;
	mnt_context_set_optsmode;
	mnt_context_set_source;
	mnt_context_set_syscall_status;
	mnt_context_set_target;
	mnt_context_set_user_mflags;
	mnt_context_strerror;
	mnt_context_umount;
	mnt_copy_fs;
	mnt_free_cache;
	mnt_free_context;
	mnt_free_fs;
	mnt_free_iter;
	mnt_free_lock;
	mnt_free_mntent;
	mnt_free_table;
	mnt_free_update;
	mnt_fs_append_attributes;
	mnt_fs_append_options;
	mnt_fs_get_attribute;
	mnt_fs_get_attributes;
	mnt_fs_get_bindsrc;
	mnt_fs_get_devno;
	mnt_fs_get_freq;
	mnt_fs_get_fs_options;
	mnt_fs_get_fstype;
	mnt_fs_get_id;
	mnt_fs_get_option;
	mnt_fs_get_parent_id;
	mnt_fs_get_passno;
	mnt_fs_get_root;
	mnt_fs_get_source;
	mnt_fs_get_srcpath;
	mnt_fs_get_tag;
	mnt_fs_get_target;
	mnt_fs_get_userdata;
	mnt_fs_get_user_options;
	mnt_fs_get_vfs_options;
	mnt_fs_is_kernel;
	mnt_fs_match_fstype;
	mnt_fs_match_options;
	mnt_fs_match_source;
	mnt_fs_match_target;
	mnt_fs_prepend_attributes;
	mnt_fs_prepend_options;
	mnt_fs_print_debug;
	mnt_fs_set_attributes;
	mnt_fs_set_bindsrc;
	mnt_fs_set_freq;
	mnt_fs_set_fstype;
	mnt_fs_set_options;
	mnt_fs_set_passno;
	mnt_fs_set_root;
	mnt_fs_set_source;
	mnt_fs_set_target;
	mnt_fs_set_userdata;
	mnt_fs_strdup_options;
	mnt_fs_to_mntent;
	mnt_fstype_is_netfs;
	mnt_fstype_is_pseudofs;
	mnt_get_builtin_optmap;
	mnt_get_fstab_path;
	mnt_get_fstype;
	mnt_get_library_version;
	mnt_get_mtab_path;
	mnt_has_regular_mtab;
	mnt_init_debug;
	mnt_iter_get_direction;
	mnt_lock_file;
	mnt_mangle;
	mnt_match_fstype;
	mnt_match_options;
	mnt_new_cache;
	mnt_new_context;
	mnt_new_fs;
	mnt_new_iter;
	mnt_new_lock;
	mnt_new_table;
	mnt_new_table_from_dir;
	mnt_new_table_from_file;
	mnt_new_update;
	mnt_optstr_append_option;
	mnt_optstr_apply_flags;
	mnt_optstr_get_flags;
	mnt_optstr_get_option;
	mnt_optstr_get_options;
	mnt_optstr_next_option;
	mnt_optstr_prepend_option;
	mnt_optstr_remove_option;
	mnt_optstr_set_option;
	mnt_parse_version_string;
	mnt_reset_context;
	mnt_reset_fs;
	mnt_reset_iter;
	mnt_resolve_path;
	mnt_resolve_spec;
	mnt_resolve_tag;
	mnt_split_optstr;
	mnt_table_add_fs;
	mnt_table_find_next_fs;
	mnt_table_find_pair;
	mnt_table_find_source;
	mnt_table_find_srcpath;
	mnt_table_find_tag;
	mnt_table_find_target;
	mnt_table_get_cache;
	mnt_table_get_nents;
	mnt_table_get_root_fs;
	mnt_table_next_child_fs;
	mnt_table_next_fs;
	mnt_table_parse_file;
	mnt_table_parse_fstab;
	mnt_table_parse_mtab;
	mnt_table_parse_stream;
	mnt_table_remove_fs;
	mnt_table_set_cache;
	mnt_table_set_iter;
	mnt_table_set_parser_errcb;
	mnt_unlock_file;
	mnt_unmangle;
	mnt_update_force_rdonly;
	mnt_update_get_filename;
	mnt_update_get_fs;
	mnt_update_get_mflags;
	mnt_update_is_ready;
	mnt_update_set_fs;
	mnt_update_table;
local:
	*;
};

MOUNT_2.20 {
global:
	mnt_context_get_table;
	mnt_context_is_fs_mounted;
	mnt_context_next_mount;
	mnt_context_set_tables_errcb;
	mnt_diff_tables;
	mnt_free_tabdiff;
	mnt_fs_get_options;
	mnt_lock_block_signals;
	mnt_new_tabdiff;
	mnt_pretty_path;
	mnt_reset_table;
	mnt_tabdiff_next_change;
	mnt_table_is_fs_mounted;
} MOUNT_2.19;

MOUNT_2.21 {
global:
	mnt_context_enable_fork;
	mnt_context_get_helper_status;
	mnt_context_get_syscall_errno;
	mnt_context_helper_executed;
	mnt_context_is_child;
	mnt_context_is_fork;
	mnt_context_is_parent;
	mnt_context_next_umount;
	mnt_context_reset_status;
	mnt_context_set_passwd_cb;
	mnt_context_syscall_called;
	mnt_context_wait_for_children;
	mnt_fs_is_netfs;
	mnt_fs_is_pseudofs;
	mnt_fs_is_swaparea;
	mnt_get_library_features;
	mnt_table_parse_dir;
} MOUNT_2.20;

MOUNT_2.22 {
global:
	mnt_context_disable_swapmatch;
	mnt_context_get_options;
	mnt_context_is_loopdel;
	mnt_context_is_nocanonicalize;
	mnt_context_is_nohelpers;
	mnt_context_is_swapmatch;
	mnt_context_tab_applied;
	mnt_fs_get_priority;
	mnt_fs_get_size;
	mnt_fs_get_swaptype;
	mnt_fs_get_tid;
	mnt_fs_get_usedsize;
	mnt_fs_streq_srcpath;
	mnt_fs_streq_target;
	mnt_get_mountpoint;
	mnt_get_swaps_path;
	mnt_optstr_deduplicate_option;
	mnt_table_find_devno;
	mnt_table_parse_swaps;
} MOUNT_2.21;

MOUNT_2.23 {
global:
	mnt_fs_get_optional_fields;
	mnt_fs_get_propagation;
	mnt_context_find_umount_fs;
	mnt_table_find_mountpoint;
} MOUNT_2.22;

MOUNT_2.24 {
global:
	mnt_context_get_fstab_userdata;
	mnt_context_get_fs_userdata;
	mnt_context_get_mtab_userdata;
	mnt_fs_append_comment;
	mnt_fs_get_comment;
	mnt_fs_set_comment;
	mnt_ref_cache;
	mnt_ref_fs;
	mnt_ref_table;
	mnt_table_append_intro_comment;
	mnt_table_append_trailing_comment;
	mnt_table_enable_comments;
	mnt_table_first_fs;
	mnt_table_get_intro_comment;
	mnt_table_get_trailing_comment;
	mnt_table_get_userdata;
	mnt_table_is_empty;
	mnt_table_last_fs;
	mnt_table_replace_file;
	mnt_table_set_intro_comment;
	mnt_table_set_trailing_comment;
	mnt_table_set_userdata;
	mnt_table_with_comments;
	mnt_table_write_file;
	mnt_unref_cache;
	mnt_unref_fs;
	mnt_unref_table;
} MOUNT_2.23;

MOUNT_2.25 {
	mnt_cache_set_targets;
	mnt_resolve_target;
	mnt_table_uniq_fs;
	mnt_tag_is_valid;
} MOUNT_2.24;

MOUNT_2.26 {
	mnt_monitor_close_fd;
	mnt_monitor_enable_userspace;
	mnt_monitor_enable_kernel;
	mnt_monitor_event_cleanup;
	mnt_monitor_get_fd;
	mnt_monitor_next_changed;
	mnt_monitor_wait;
	mnt_new_monitor;
	mnt_ref_monitor;
	mnt_unref_monitor;
} MOUNT_2.25;
